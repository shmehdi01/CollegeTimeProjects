/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package login;

import java.awt.Color;
import java.awt.event.WindowListener;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
/**
 *
 * @author rizwan
 */
public class Main extends javax.swing.JFrame {

    private Connection con;
    private PreparedStatement pst;
    private ResultSet rs;
    private JFrame ok = null;
    boolean check = true;

    public Main() throws IOException {
        initComponents();
        ok = this;
        connect();
        disabled();
        scn();
        ButtonGroup bg = new ButtonGroup();
        bg.add(loginR);
        bg.add(RegR);
//        addWindowListener((new java.awt.event.WindowAdapter() {
//
//            public void windowClosing(java.awt.event.WindowEvent windowEvent) {
//
//                if (JOptionPane.showConfirmDialog(ok,
//                        "Are you sure to close this window?", "Really Closing?",
//                        JOptionPane.YES_NO_OPTION,
//                        JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {
//
//                    System.exit(0);
//                }
//            }
//        }));
       if(!check)
       {
            Runtime.getRuntime().exec("C:\\xampp\\xampp-control");
       }

    }

    private void scn() {
        loginR.setSelected(true);
        if (loginR.isSelected()) {
            login();
        }
    }

    private void connect() {
        try {

            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/login", "root", "");
            System.out.println("Connection created");
            check = true;

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Please Open Xampp Server");
        }
    }

    private void login() {
        fn.setVisible(false);
        un.setVisible(true);
        mb.setVisible(false);
        pd.setVisible(true);

        name.setVisible(false);
        user.setVisible(true);
        mobile.setVisible(false);
        pass.setVisible(true);

        log.setVisible(true);
        reg.setVisible(false);

        jPanel1.setVisible(true);
    }

    private void register() {
        fn.setVisible(true);
        un.setVisible(true);
        mb.setVisible(true);
        pd.setVisible(true);

        name.setVisible(true);
        user.setVisible(true);
        mobile.setVisible(true);
        pass.setVisible(true);

        reg.setVisible(true);
        log.setVisible(false);

        jPanel1.setVisible(true);
    }

    private void disabled() {
        fn.setVisible(false);
        un.setVisible(false);
        mb.setVisible(false);
        pd.setVisible(false);

        name.setVisible(false);
        user.setVisible(false);
        mobile.setVisible(false);
        pass.setVisible(false);

        reg.setVisible(false);
        log.setVisible(false);

        jPanel1.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        reg = new javax.swing.JButton();
        user = new javax.swing.JTextField();
        fn = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        pd = new javax.swing.JLabel();
        mb = new javax.swing.JLabel();
        pass = new javax.swing.JPasswordField();
        log = new javax.swing.JButton();
        un = new javax.swing.JLabel();
        mobile = new javax.swing.JTextField();
        loginR = new javax.swing.JRadioButton();
        RegR = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        error = new javax.swing.JLabel();
        error1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 204, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Welcome to App");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 11, 357, 34));

        jPanel1.setBackground(new java.awt.Color(51, 204, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 255), 3));

        reg.setText("Create an Account");
        reg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regActionPerformed(evt);
            }
        });

        user.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                userKeyReleased(evt);
            }
        });

        fn.setText("Full Name");

        pd.setText("Password");

        mb.setText("Mobile No.");

        log.setText("Login");
        log.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logActionPerformed(evt);
            }
        });

        un.setText("Username");

        mobile.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                mobileKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                mobileKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                mobileKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fn)
                    .addComponent(un)
                    .addComponent(mb)
                    .addComponent(pd))
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(user, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(log)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(reg))
                    .addComponent(mobile, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pass))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(user, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(un))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mobile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mb))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pd)
                    .addComponent(pass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(log)
                    .addComponent(reg))
                .addContainerGap())
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 80, -1, -1));

        loginR.setBackground(new java.awt.Color(0, 204, 255));
        loginR.setForeground(new java.awt.Color(255, 255, 255));
        loginR.setText("Login");
        loginR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginRActionPerformed(evt);
            }
        });
        getContentPane().add(loginR, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 50, -1, -1));

        RegR.setBackground(new java.awt.Color(0, 204, 255));
        RegR.setForeground(new java.awt.Color(255, 255, 255));
        RegR.setText("Register");
        RegR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegRActionPerformed(evt);
            }
        });
        getContentPane().add(RegR, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 50, -1, -1));

        jPanel2.setBackground(new java.awt.Color(0, 51, 51));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        error.setBackground(new java.awt.Color(255, 0, 0));
        error.setForeground(new java.awt.Color(255, 255, 255));
        error.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        error.setOpaque(true);
        jPanel2.add(error, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 280, 280, -1));

        error1.setBackground(new java.awt.Color(255, 0, 0));
        error1.setForeground(new java.awt.Color(255, 255, 255));
        error1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        error1.setOpaque(true);
        jPanel2.add(error1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 280, 280, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 380, 310));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void regActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regActionPerformed

         String n = null, u = null, m = null, p = null;
            n = name.getText();
            u = user.getText();
            m = mobile.getText();
            p = pass.getText();
            if(n.length()==0 || u.length()==0 || m.length()==0 || p.length()==0)
            {
                JOptionPane.showMessageDialog(null, "Fields are empty");
            }
            else
            {
                try {
            pst = con.prepareStatement("insert into mydata(user,password,name,mobile) value(?,?,?,?)");
            pst.setString(1, u);
            pst.setString(2, p);
            pst.setString(3, n);
            pst.setString(4, m);

            int i = pst.executeUpdate();
            if (i > 0) {
                JOptionPane.showMessageDialog(null, "Account Created");
            }

            name.setText("");
            user.setText("");
            mobile.setText("");
            pass.setText("");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "error");
        }
            }
        
    }//GEN-LAST:event_regActionPerformed

    private void logActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logActionPerformed

        String u = null, p = null;
        String name = null;
        Boolean flag = false;
        u = user.getText();
        p = pass.getText();
        if (u.length() == 0 || p.length() == 0) {
            JOptionPane.showMessageDialog(null, "Fileds are Empty");
        } else {

            try {

                pst = con.prepareStatement("SELECT * FROM mydata");
                rs = pst.executeQuery();

                while (rs.next()) {
                    if (u.equals(rs.getString(1)) && p.equals(rs.getString(2))) {
                        flag = true;
                        name = rs.getString(3);
                    }

                }

                if (flag) {
                    JOptionPane.showMessageDialog(null, "Login Succesfull \n Welcome MR. " + name.toUpperCase());
                    
                } else {
                    JOptionPane.showMessageDialog(null, "Username or Password is incorrect");
                }

                user.setText("");
                pass.setText("");

            } catch (SQLException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
        }


    }//GEN-LAST:event_logActionPerformed

    private void loginRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginRActionPerformed
        login();
        if(loginR.isSelected())
      {
          error1.setText("");
      }

    }//GEN-LAST:event_loginRActionPerformed

    private void RegRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegRActionPerformed

        register();


    }//GEN-LAST:event_RegRActionPerformed

    private void userKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_userKeyReleased
      boolean flag = false;
     boolean num = false;
      try{
          String u = user.getText();
          pst = con.prepareStatement("Select user from mydata");
          rs = pst.executeQuery();
          while(rs.next())
          {
              if(rs.getString(1).equals(u))
                  flag = true;
              
          }
      }catch(Exception e) {System.out.println("erorr");}
      
      if(RegR.isSelected()){
           if(flag)
               {
                  error1.setText("username alreday exist");
                  error1.setBackground(Color.red);
                  reg.setEnabled(false);
                 // JOptionPane.showMessageDialog(null, "already exist");
              }
              else  
              {
                  error1.setText("Username Available");
                  error1.setBackground(Color.green);
                  reg.setEnabled(true);
              }
           if(user.getText().length()==0)
           error.setText("");
           
           boolean spc = false;
      
      try{
          for(int i=0; i<user.getText().length();i++)
          {
              if(Character.isSpaceChar(user.getText().charAt(i)))
                  spc = true;
                 // System.out.println("yes");    
          }
          if(Character.isDigit(user.getText().charAt(0)))
               num = true;
      }catch(Exception e){}
       if(num || user.getText().length()<4 || spc)
       {
           error1.setText("username not Available");
                  error1.setBackground(Color.red);
                  reg.setEnabled(false);
       }
           
      }
      
      
      
            
    }//GEN-LAST:event_userKeyReleased

    private void mobileKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mobileKeyReleased
        if( mobile.getText().length() != 10)
             {
                  
                  error.setText("Number should be in 10 digit");
                  error.setBackground(Color.red);
                  reg.setEnabled(false);
                 // mobile.setBackground(Color.red);
                  System.out.println(mobile.getText().length());
              
             }
          else 
              {
                  error.setText("");
                  reg.setEnabled(true);
                  //.setBackground(Color.white);
              }
        
        try{
            String m = mobile.getText();

             if(m.length()==0)
              {
                  error.setText("");
                  reg.setEnabled(false);
              }
            for(int i=0; i<m.length(); i++)
            {
                if(Character.isLetter(m.charAt(i)))
                {
                    error.setText("Please enter correct number");
                    error.setBackground(Color.red);
                    reg.setEnabled(false);
                }
                else if(m.startsWith("1") || m.startsWith("2")  || m.startsWith("3") || m.startsWith("4")|| m.startsWith("5")|| m.startsWith("6") )
            {
                error.setText("Please enter correct number");
                error.setBackground(Color.red);
                reg.setEnabled(false);
            }
                 else 
              {
                  //error.setText("");
                  //reg.setEnabled(true);
              }
            }
            
            
        }catch(Exception e) {}
    }//GEN-LAST:event_mobileKeyReleased

    private void mobileKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mobileKeyTyped
       
    }//GEN-LAST:event_mobileKeyTyped

    private void mobileKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mobileKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_mobileKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Main().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton RegR;
    private javax.swing.JLabel error;
    private javax.swing.JLabel error1;
    private javax.swing.JLabel fn;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton log;
    private javax.swing.JRadioButton loginR;
    private javax.swing.JLabel mb;
    private javax.swing.JTextField mobile;
    private javax.swing.JTextField name;
    private javax.swing.JPasswordField pass;
    private javax.swing.JLabel pd;
    private javax.swing.JButton reg;
    private javax.swing.JLabel un;
    private javax.swing.JTextField user;
    // End of variables declaration//GEN-END:variables
}
